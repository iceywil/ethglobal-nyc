import { type JsonAbi } from '@fuel-ts/abi-coder';
import type { BN } from '@fuel-ts/math';
import type { ReceiptCall } from '@fuel-ts/transactions';
type GetFunctionCallProps = {
    abi: JsonAbi;
    receipt: ReceiptCall;
    rawPayload: string;
    maxInputs: BN;
};
export interface FunctionCall {
    amount?: BN | undefined;
    assetId?: string | undefined;
    functionSignature: string;
    functionName: string;
    argumentsProvided: Record<string, unknown> | undefined;
}
/**
 * Builds a FunctionCall object from a call receipt.
 *
 * Currently only supports the first function call, multicall is not supported.
 * This should be https://github.com/FuelLabs/fuels-ts/issues/3733.
 */
export declare const getFunctionCall: ({ abi, receipt, rawPayload, }: GetFunctionCallProps) => FunctionCall;
export {};
//# sourceMappingURL=call.d.ts.map