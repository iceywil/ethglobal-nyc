import { type BN } from '@fuel-ts/math';
import { type Transaction } from '@fuel-ts/transactions';
import type { GasCosts } from '../provider';
import type { TransactionRequest } from '../transaction-request';
import type { TransactionResultReceipt } from '../transaction-response';
import type { AbiMap, GraphqlTransactionStatus, PreConfirmationTransactionSummary, TransactionSummary } from './types';
export interface AssembleTransactionSummaryParams {
    gasPerByte: BN;
    gasPriceFactor: BN;
    transaction: Transaction;
    id: string;
    transactionBytes: Uint8Array;
    gqlTransactionStatus?: GraphqlTransactionStatus;
    receipts: TransactionResultReceipt[];
    abiMap?: AbiMap;
    maxInputs: BN;
    gasCosts: GasCosts;
    maxGasPerTx: BN;
    gasPrice: BN;
    baseAssetId: string;
}
/** @hidden */
export declare function assembleTransactionSummary<TTransactionType = void>(params: AssembleTransactionSummaryParams): TransactionSummary<TTransactionType>;
export interface AssemblePreConfirmationTransactionSummaryParams {
    id: string;
    gqlTransactionStatus?: GraphqlTransactionStatus;
    abiMap?: AbiMap;
    maxInputs: BN;
    baseAssetId: string;
    transactionRequest?: TransactionRequest;
}
/** @hidden */
export declare function assemblePreConfirmationTransactionSummary(params: AssemblePreConfirmationTransactionSummaryParams): PreConfirmationTransactionSummary;
//# sourceMappingURL=assemble-transaction-summary.d.ts.map