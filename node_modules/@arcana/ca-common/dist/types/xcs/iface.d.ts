import { Bytes } from "../types";
import { OmniversalChainID } from "../data";
export declare enum QuoteType {
    ExactIn = 0,
    ExactOut = 1
}
export interface Quote {
    originalResponse: unknown;
    type: QuoteType;
    inputAmount: bigint;
    outputAmountMinimum: bigint;
    outputAmountLikely: bigint;
}
type CommonQuoteParameters = {
    userAddress: Bytes;
    receiverAddress: Bytes | null;
    chain: OmniversalChainID;
    inputToken: Bytes;
    outputToken: Bytes;
};
export type QuoteRequestExactInput = CommonQuoteParameters & {
    type: QuoteType.ExactIn;
    inputAmount: bigint;
};
export type QuoteRequestExactOutput = CommonQuoteParameters & {
    type: QuoteType.ExactOut;
    outputAmount: bigint;
};
export interface Aggregator {
    getQuotes(requests: (QuoteRequestExactInput | QuoteRequestExactOutput)[]): Promise<(Quote | null)[]>;
}
export {};
