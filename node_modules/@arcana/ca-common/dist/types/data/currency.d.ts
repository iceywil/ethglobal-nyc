import { Hex } from "viem";
import Decimal from "decimal.js";
import { Bytes } from "../types";
import { PermitVariant } from "../permitutils";
export declare enum CurrencyID {
    USDC = 1,
    USDT = 2,
    ETH = 3,
    POL = 4,
    AVAX = 5,
    HYPE = 16,
    KAIA = 17
}
export declare class Currency {
    readonly currencyID: CurrencyID;
    readonly decimals: number;
    readonly permitVariant: PermitVariant;
    readonly permitContractVersion: number;
    readonly isGasToken: boolean;
    readonly tokenAddress: Buffer;
    private readonly oneUnitToAtomicUnitRatio;
    constructor(currencyID: CurrencyID, tokenAddress: string | Bytes | number[], decimals: number, permitVariant: PermitVariant, permitContractVersion: number | undefined, isGasToken: boolean);
    convertUnitsToAmountDecimal(input: bigint | number | Hex | Bytes): Decimal;
    convertAmountToUnitsInBinary(input: Decimal): Buffer;
}
