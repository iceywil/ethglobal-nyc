import { pad, toHex } from "viem";
import Decimal from "decimal.js";
export function convertToBufferIfNecessary(buf) {
    return Buffer.isBuffer(buf) ? buf : Buffer.from(buf);
}
export function zeroExtendBufToGivenSize(buf, size = 32) {
    if (buf.length === size) {
        return convertToBufferIfNecessary(buf);
    }
    if (buf.length > size) {
        return convertToBufferIfNecessary(buf.subarray(0, size));
    }
    const out = Buffer.alloc(size);
    out.set(buf, size - buf.length);
    return out;
}
export function ezPadTo32Hex(input) {
    return pad(typeof input !== "string" ? toHex(input) : input, {
        dir: "left",
        size: 32,
    });
}
export function convertDecimalToBigInt(dec) {
    return BigInt(dec.ceil().toFixed());
}
export function convertBigIntToDecimal(big) {
    return new Decimal(big.toString(10));
}
export function maxByBigInt(items, getValue) {
    return items.reduce((m, e) => getValue(e) > getValue(m) ? e : m);
}
export function minByByBigInt(items, getValue) {
    return items.reduce((m, e) => getValue(e) < getValue(m) ? e : m);
}
