"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Commands: () => Commands,
  FuelAsm: () => FuelAsm,
  Script: () => import_script.Script,
  createConfig: () => createConfig
});
module.exports = __toCommonJS(src_exports);
var FuelAsm = __toESM(require("@fuels/vm-asm"));

// src/cli/utils/createConfig.ts
function createConfig(config) {
  return config;
}
__name(createConfig, "createConfig");

// src/cli/types.ts
var Commands = /* @__PURE__ */ ((Commands2) => {
  Commands2["build"] = "build";
  Commands2["deploy"] = "deploy";
  Commands2["dev"] = "dev";
  Commands2["init"] = "init";
  Commands2["versions"] = "versions";
  Commands2["node"] = "node";
  return Commands2;
})(Commands || {});

// src/index.ts
var import_script = require("@fuel-ts/script");
__reExport(src_exports, require("@fuel-ts/abi-coder"), module.exports);
__reExport(src_exports, require("@fuel-ts/account"), module.exports);
__reExport(src_exports, require("@fuel-ts/account/configs"), module.exports);
__reExport(src_exports, require("@fuel-ts/address"), module.exports);
__reExport(src_exports, require("@fuel-ts/address/configs"), module.exports);
__reExport(src_exports, require("@fuel-ts/contract"), module.exports);
__reExport(src_exports, require("@fuel-ts/crypto"), module.exports);
__reExport(src_exports, require("@fuel-ts/errors"), module.exports);
__reExport(src_exports, require("@fuel-ts/hasher"), module.exports);
__reExport(src_exports, require("@fuel-ts/math"), module.exports);
__reExport(src_exports, require("@fuel-ts/math/configs"), module.exports);
__reExport(src_exports, require("@fuel-ts/program"), module.exports);
__reExport(src_exports, require("@fuel-ts/recipes"), module.exports);
__reExport(src_exports, require("@fuel-ts/transactions"), module.exports);
__reExport(src_exports, require("@fuel-ts/transactions/configs"), module.exports);
__reExport(src_exports, require("@fuel-ts/utils"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Commands,
  FuelAsm,
  Script,
  createConfig,
  ...require("@fuel-ts/abi-coder"),
  ...require("@fuel-ts/account"),
  ...require("@fuel-ts/account/configs"),
  ...require("@fuel-ts/address"),
  ...require("@fuel-ts/address/configs"),
  ...require("@fuel-ts/contract"),
  ...require("@fuel-ts/crypto"),
  ...require("@fuel-ts/errors"),
  ...require("@fuel-ts/hasher"),
  ...require("@fuel-ts/math"),
  ...require("@fuel-ts/math/configs"),
  ...require("@fuel-ts/program"),
  ...require("@fuel-ts/recipes"),
  ...require("@fuel-ts/transactions"),
  ...require("@fuel-ts/transactions/configs"),
  ...require("@fuel-ts/utils")
});
//# sourceMappingURL=index.js.map