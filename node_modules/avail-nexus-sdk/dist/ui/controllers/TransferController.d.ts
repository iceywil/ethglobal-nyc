import React from 'react';
import type { ITransactionController, ActiveTransaction } from '../types';
import { NexusSDK } from '../..';
import { TransferParams, TransferResult } from '../../types';
export interface TransferConfig extends Partial<TransferParams> {
}
export declare class TransferController implements ITransactionController {
    InputForm: React.FC<{
        prefill: Partial<TransferConfig>;
        onUpdate: (data: Partial<TransferConfig>) => void;
        isBusy: boolean;
        tokenBalance?: string;
        prefillFields?: {
            chainId?: boolean;
            toChainId?: boolean;
            token?: boolean;
            amount?: boolean;
            recipient?: boolean;
        };
    }>;
    hasSufficientInput(inputData: Partial<TransferParams>): boolean;
    runReview(sdk: NexusSDK, inputData: TransferParams): Promise<ActiveTransaction['simulationResult']>;
    confirmAndProceed(sdk: NexusSDK, inputData: TransferParams): Promise<TransferResult>;
}
